openapi: 3.0.3
info:
  title: Customer Resource Management API
  version: "1.0.0"
  description: |
    Production-ready API for managing customer resources. Provides complete CRUD, advanced search, statistics, bulk operations, and enterprise integrations. Implements JWT Bearer authentication, REST best practices, error handling with RFC 7807, HATEOAS, and supports client SDK generation.
  termsOfService: https://example.com/terms
  contact:
    name: CRM API Team
    url: https://example.com/contact
    email: api-support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  x-api-deprecation:
    notice: "Future versions will move to /api/v2/ with enhanced features."
  externalDocs:
    description: API Documentation & Usage Guides
    url: https://docs.example.com/customer-api

servers:
  - url: https://api.example.com/{basePath}
    description: Production
    variables:
      basePath:
        default: api/v1
        enum: [api/v1, api/v2]
  - url: https://staging-api.example.com/{basePath}
    description: Staging
    variables:
      basePath:
        default: api/v1
        enum: [api/v1, api/v2]
  - url: http://localhost:8080/{basePath}
    description: Local Development
    variables:
      basePath:
        default: api/v1
        enum: [api/v1, api/v2]

tags:
  - name: Customers
    description: Operations for managing customers
  - name: Bulk Operations
    description: Bulk create and management
  - name: Statistics
    description: Aggregate customer statistics
  - name: Search
    description: Advanced customer search
  - name: Utilities
    description: Utility endpoints (existence check)
  - name: Webhooks
    description: Customer event notifications

paths:
  /customers:
    post:
      tags: [Customers]
      summary: Create a new customer
      description: Creates a new customer resource with validated data.
      operationId: createCustomer
      requestBody:
        required: true
        description: Customer data to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateRequest'
            examples:
              example1:
                value:
                  firstName: "Alice"
                  lastName: "Smith"
                  email: "alice.smith@example.com"
                  phoneNumber: "+14155552671"
                  dateOfBirth: "1990-05-21"
                  address:
                    street: "123 Main St"
                    city: "San Francisco"
                    state: "CA"
                    postalCode: "94105"
                    country: "US"
                  status: "ACTIVE"
                  metadata:
                    loyaltyTier: "gold"
      responses:
        '201':
          description: Customer created successfully
          headers:
            Location:
              description: URI of the created customer
              schema:
                type: string
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
              examples:
                default:
                  value:
                    id: "bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f"
                    firstName: "Alice"
                    lastName: "Smith"
                    email: "alice.smith@example.com"
                    phoneNumber: "+14155552671"
                    dateOfBirth: "1990-05-21"
                    address:
                      street: "123 Main St"
                      city: "San Francisco"
                      state: "CA"
                      postalCode: "94105"
                      country: "US"
                    status: "ACTIVE"
                    createdAt: "2025-08-13T14:25:00Z"
                    updatedAt: "2025-08-13T14:25:00Z"
                    metadata:
                      loyaltyTier: "gold"
                    _links:
                      self: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                      update: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                      delete: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - bearerAuth: []
      x-correlation-id: true

    get:
      tags: [Customers]
      summary: List customers with pagination, filtering, and sorting
      description: Returns a paginated list of customers. Supports filtering and sorting.
      operationId: listCustomers
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/filterStatus'
        - $ref: '#/components/parameters/filterEmail'
        - $ref: '#/components/parameters/X-Correlation-ID'
      responses:
        '200':
          description: Paginated customer list
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPageResponse'
              examples:
                default:
                  value:
                    content:
                      - id: "bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f"
                        firstName: "Alice"
                        lastName: "Smith"
                        email: "alice.smith@example.com"
                        status: "ACTIVE"
                        createdAt: "2025-08-13T14:25:00Z"
                        updatedAt: "2025-08-13T14:25:00Z"
                        _links:
                          self: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                      - id: "c4af0b8e-7c68-4c7d-8f42-2d2e1f7a1b6a"
                        firstName: "Bob"
                        lastName: "Jones"
                        email: "bob.jones@example.com"
                        status: "INACTIVE"
                        createdAt: "2025-08-13T14:20:00Z"
                        updatedAt: "2025-08-13T14:22:00Z"
                        _links:
                          self: { href: "/api/v1/customers/c4af0b8e-7c68-4c7d-8f42-2d2e1f7a1b6a" }
                    page:
                      number: 0
                      size: 2
                      totalElements: 100
                      totalPages: 50
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

  /customers/search:
    post:
      tags: [Search]
      summary: Advanced customer search
      description: Performs advanced search with filter, sort, and custom criteria.
      operationId: searchCustomers
      parameters:
        - $ref: '#/components/parameters/X-Correlation-ID'
      requestBody:
        required: true
        description: Search filters and criteria
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSearchRequest'
            examples:
              example1:
                value:
                  filters:
                    status: "ACTIVE"
                    country: "US"
                  sort: ["lastName,asc", "createdAt,desc"]
                  page: 0
                  size: 10
      responses:
        '200':
          description: Search results with pagination
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPageResponse'
              examples:
                default:
                  value:
                    content:
                      - id: "bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f"
                        firstName: "Alice"
                        lastName: "Smith"
                        email: "alice.smith@example.com"
                        status: "ACTIVE"
                        createdAt: "2025-08-13T14:25:00Z"
                        updatedAt: "2025-08-13T14:25:00Z"
                        _links:
                          self: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                    page:
                      number: 0
                      size: 10
                      totalElements: 3
                      totalPages: 1
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

  /customers/{id}:
    get:
      tags: [Customers]
      summary: Get customer by ID
      description: Retrieves a customer by their unique identifier.
      operationId: getCustomerById
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/X-Correlation-ID'
      responses:
        '200':
          description: Customer details
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
              examples:
                default:
                  value:
                    id: "bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f"
                    firstName: "Alice"
                    lastName: "Smith"
                    email: "alice.smith@example.com"
                    phoneNumber: "+14155552671"
                    dateOfBirth: "1990-05-21"
                    address:
                      street: "123 Main St"
                      city: "San Francisco"
                      state: "CA"
                      postalCode: "94105"
                      country: "US"
                    status: "ACTIVE"
                    createdAt: "2025-08-13T14:25:00Z"
                    updatedAt: "2025-08-13T14:25:00Z"
                    metadata:
                      loyaltyTier: "gold"
                    _links:
                      self: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                      update: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
                      delete: { href: "/api/v1/customers/bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f" }
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

    put:
      tags: [Customers]
      summary: Update entire customer
      description: Updates all fields of the customer resource by ID.
      operationId: updateCustomer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/X-Correlation-ID'
      requestBody:
        required: true
        description: Complete customer object to replace existing data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
            examples:
              example1:
                value:
                  firstName: "Alice"
                  lastName: "Smith"
                  email: "alice.smith@example.com"
                  phoneNumber: "+14155552671"
                  dateOfBirth: "1990-05-21"
                  address:
                    street: "123 Main St"
                    city: "San Francisco"
                    state: "CA"
                    postalCode: "94105"
                    country: "US"
                  status: "ACTIVE"
                  metadata:
                    loyaltyTier: "platinum"
      responses:
        '200':
          description: Customer updated successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '409': { $ref: '#/components/responses/Conflict' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

    patch:
      tags: [Customers]
      summary: Partial update customer
      description: Updates one or more fields of the customer resource by ID.
      operationId: patchCustomer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/X-Correlation-ID'
      requestBody:
        required: true
        description: Partial customer object (only fields to update)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPatchRequest'
            examples:
              example1:
                value:
                  status: "INACTIVE"
      responses:
        '200':
          description: Customer partially updated
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '409': { $ref: '#/components/responses/Conflict' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

    delete:
      tags: [Customers]
      summary: Delete customer
      description: Deletes a customer by their unique identifier.
      operationId: deleteCustomer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/X-Correlation-ID'
      responses:
        '204':
          description: Customer deleted successfully (no content)
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '409': { $ref: '#/components/responses/Conflict' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

  /customers/{id}/exists:
    get:
      tags: [Utilities]
      summary: Check if customer exists
      description: Checks if a customer with the specified ID exists.
      operationId: customerExists
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/X-Correlation-ID'
      responses:
        '200':
          description: Existence check result
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerExistsResponse'
              examples:
                exists:
                  value: { exists: true }
                notExists:
                  value: { exists: false }
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

  /customers/bulk:
    post:
      tags: [Bulk Operations]
      summary: Bulk create customers
      description: Creates multiple customers in a single request.
      operationId: bulkCreateCustomers
      parameters:
        - $ref: '#/components/parameters/X-Correlation-ID'
      requestBody:
        required: true
        description: Array of customer objects to create
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerCreateRequest'
            examples:
              example1:
                value:
                  - firstName: "Alice"
                    lastName: "Smith"
                    email: "alice.smith@example.com"
                    status: "ACTIVE"
                  - firstName: "Bob"
                    lastName: "Jones"
                    email: "bob.jones@example.com"
                    status: "INACTIVE"
      responses:
        '201':
          description: Customers created successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '409': { $ref: '#/components/responses/Conflict' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

  /customers/statistics:
    get:
      tags: [Statistics]
      summary: Get customer statistics
      description: Returns aggregate statistics about customers (counts, status distribution).
      operationId: getCustomerStatistics
      parameters:
        - $ref: '#/components/parameters/X-Correlation-ID'
      responses:
        '200':
          description: Customer statistics
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerStatisticsResponse'
              examples:
                default:
                  value:
                    totalCount: 100
                    activeCount: 80
                    inactiveCount: 15
                    suspendedCount: 5
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }
      security:
        - bearerAuth: []

webhooks:
  customer.created:
    post:
      summary: Customer Created Event
      description: Triggered when a new customer is created.
      operationId: customerCreatedWebhook
      requestBody:
        description: Customer details for created event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerResponse'
      responses:
        '200':
          description: Webhook processed
  customer.updated:
    post:
      summary: Customer Updated Event
      description: Triggered when a customer is updated.
      operationId: customerUpdatedWebhook
      requestBody:
        description: Customer details for updated event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerResponse'
      responses:
        '200':
          description: Webhook processed

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  headers:
    X-RateLimit-Limit:
      description: The maximum number of requests allowed in the current period
      schema:
        type: integer
    X-RateLimit-Remaining:
      description: The number of requests remaining in the current period
      schema:
        type: integer
    X-Correlation-ID:
      description: Unique identifier for tracking requests across services
      schema:
        type: string
        format: uuid

  parameters:
    id:
      name: id
      in: path
      required: true
      description: Customer UUID
      schema:
        type: string
        format: uuid
      example: "bbf9cfb6-3b2f-4d4a-8b3c-58d19cab2f2f"
    page:
      name: page
      in: query
      required: false
      description: Zero-based page index
      schema:
        type: integer
        minimum: 0
      example: 0
    size:
      name: size
      in: query
      required: false
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
      example: 20
    sort:
      name: sort
      in: query
      required: false
      description: Sorting fields (comma-separated: field,[asc|desc])
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
      example: ["lastName,asc", "createdAt,desc"]
    filterStatus:
      name: status
      in: query
      required: false
      description: Filter by status
      schema:
        $ref: '#/components/schemas/CustomerStatus'
      example: "ACTIVE"
    filterEmail:
      name: email
      in: query
      required: false
      description: Filter by email address
      schema:
        type: string
        format: email
      example: "alice.smith@example.com"
    X-Correlation-ID:
      name: X-Correlation-ID
      in: header
      required: false
      description: Correlation ID for request tracking
      schema:
        type: string
        format: uuid
      example: "d1e2f3a4-5678-4bcd-9e12-3456789abcdef"

  responses:
    BadRequest:
      description: Invalid request parameters or malformed request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/bad-request"
                title: "Bad Request"
                status: 400
                detail: "Invalid email format"
                instance: "/api/v1/customers"
    Unauthorized:
      description: Authentication required or failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/unauthorized"
                title: "Unauthorized"
                status: 401
                detail: "JWT token missing or invalid"
                instance: "/api/v1/customers"
    Forbidden:
      description: Insufficient permissions for requested operation
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/forbidden"
                title: "Forbidden"
                status: 403
                detail: "User does not have access"
                instance: "/api/v1/customers"
    NotFound:
      description: Resource not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/not-found"
                title: "Not Found"
                status: 404
                detail: "Customer with given ID not found"
                instance: "/api/v1/customers/{id}"
    Conflict:
      description: Resource conflict (e.g., duplicate email)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/conflict"
                title: "Conflict"
                status: 409
                detail: "Email address already in use"
                instance: "/api/v1/customers"
    InternalServerError:
      description: Unexpected internal server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            example:
              value:
                type: "https://example.com/errors/internal"
                title: "Internal Server Error"
                status: 500
                detail: "Unexpected error occurred"
                instance: "/api/v1/customers"

  schemas:

    CustomerStatus:
      type: string
      description: Customer status
      enum: [ACTIVE, INACTIVE, SUSPENDED]
      example: "ACTIVE"

    Address:
      type: object
      description: Customer address details
      properties:
        street:
          type: string
          description: Street address
          example: "123 Main St"
        city:
          type: string
          description: City
          example: "San Francisco"
        state:
          type: string
          description: State or region
          example: "CA"
        postalCode:
          type: string
          description: Postal or ZIP code
          example: "94105"
        country:
          type: string
          description: Country code (ISO 3166-1 alpha-2)
          example: "US"
      required: [street, city, state, postalCode, country]

    CustomerCreateRequest:
      type: object
      description: Request body for creating a customer
      required:
        - firstName
        - lastName
        - email
        - status
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          description: Customer's first name (1-50 chars)
          example: "Alice"
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          description: Customer's last name (1-50 chars)
          example: "Smith"
        email:
          type: string
          format: email
          description: Customer's email (unique, valid format)
          example: "alice.smith@example.com"
        phoneNumber:
          type: string
          pattern: '^\\+?[1-9]\\d{1,14}$'
          description: Customer's phone number (E.164 format)
          example: "+14155552671"
        dateOfBirth:
          type: string
          format: date
          description: Date of birth (ISO 8601)
          example: "1990-05-21"
        address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/CustomerStatus'
        metadata:
          type: object
          additionalProperties: true
          description: Flexible key-value pairs for custom metadata
          example:
            loyaltyTier: "gold"

    CustomerUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/CustomerCreateRequest'
      description: Request body for updating a customer (full replace)

    CustomerPatchRequest:
      type: object
      description: Request body for partial customer update
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 50
        lastName:
          type: string
          minLength: 1
          maxLength: 50
        email:
          type: string
          format: email
        phoneNumber:
          type: string
          pattern: '^\\+?[1-9]\\d{1,14}$'
        dateOfBirth:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/CustomerStatus'
        metadata:
          type: object
          additionalProperties: true

    CustomerResponse:
      type: object
      description: Customer resource representation
      required:
        - id
        - firstName
        - lastName
        - email
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique customer identifier
        firstName:
          type: string
          description: Customer's first name
        lastName:
          type: string
          description: Customer's last name
        email:
          type: string
          format: email
          description: Customer's email
        phoneNumber:
          type: string
          description: Customer's phone number (E.164)
        dateOfBirth:
          type: string
          format: date
          description: Date of birth (ISO 8601)
        address:
          $ref: '#/components/schemas/Address'
        status:
          $ref: '#/components/schemas/CustomerStatus'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp (ISO 8601)
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp (ISO 8601)
        metadata:
          type: object
          additionalProperties: true
          description: Flexible key-value pairs for custom metadata
        _links:
          type: object
          description: HATEOAS links
          additionalProperties:
            type: object
            properties:
              href:
                type: string

    CustomerPageResponse:
      type: object
      description: Paginated customer list response
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CustomerResponse'
        page:
          type: object
          properties:
            number:
              type: integer
              description: Current page number
            size:
              type: integer
              description: Page size
            totalElements:
              type: integer
              description: Total number of customers
            totalPages:
              type: integer
              description: Total pages available

    CustomerSearchRequest:
      type: object
      description: Advanced search request body
      properties:
        filters:
          type: object
          description: Filter criteria (e.g., status, country)
          additionalProperties: true
        sort:
          type: array
          items:
            type: string
          description: Sorting criteria ("field,asc|desc")
          example: ["lastName,asc", "createdAt,desc"]
        page:
          type: integer
          description: Zero-based page index
        size:
          type: integer
          description: Number of items per page

    CustomerStatisticsResponse:
      type: object
      description: Aggregate customer statistics
      properties:
        totalCount:
          type: integer
          description: Total number of customers
        activeCount:
          type: integer
          description: Number of ACTIVE customers
        inactiveCount:
          type: integer
          description: Number of INACTIVE customers
        suspendedCount:
          type: integer
          description: Number of SUSPENDED customers

    CustomerExistsResponse:
      type: object
      description: Existence check response
      properties:
        exists:
          type: boolean
          description: True if customer exists

    ProblemDetails:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      description: RFC 7807 Problem Details
      properties:
        type:
          type: string
          format: uri
          description: Error type URI
        title:
          type: string
          description: Short error summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Detailed error message
        instance:
          type: string
          description: Path to error instance
        errors:
          type: object
          additionalProperties: true
          description: Optional field-level errors

  # Discrimin
