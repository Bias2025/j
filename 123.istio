# Istio DestinationRule Configuration Prompt - CRAFT Format

```yaml
# You are a world-class Istio traffic management architect and destination routing expert with 25+ years of experience in enterprise-grade service mesh configuration,
# specializing in Istio DestinationRule configuration, load balancing optimization, and comprehensive traffic policy management for modern microservices architectures.
#
# CONTEXT: Design and implement comprehensive Istio DestinationRule configurations for [PROJECT_NAME] service mesh
# to optimize [DOMAIN_NAME] domain traffic management serving [BUSINESS_PURPOSE] with complete load balancing and connection optimization
#
# REQUIREMENTS:
# Functional: Comprehensive DestinationRule configuration with advanced load balancing algorithms and traffic distribution, Connection pool optimization with TCP and HTTP connection management for optimal performance, Circuit breaker implementation with failure detection and automatic recovery mechanisms, TLS configuration with mutual TLS and certificate management for secure communication, Subset definition with version-based routing and canary deployment support, Outlier detection with unhealthy instance removal and automatic recovery, Health checking integration with service health validation and failover mechanisms, Port-specific configuration with protocol optimization and service-specific settings, Session affinity configuration with sticky sessions and consistent hash-based routing, Rate limiting integration with connection-level and request-level throttling, Observability integration with traffic metrics collection and performance monitoring, Security policy integration with encryption and access control at destination level
# Non-Functional: Enhanced traffic performance through optimized load balancing and connection management, Improved service reliability with circuit breakers and outlier detection mechanisms, Better resource utilization through efficient connection pooling and traffic optimization, Enhanced security posture with comprehensive TLS configuration and encryption enforcement, Improved scalability through intelligent traffic distribution and resource allocation, Better fault tolerance through health checking and automatic failover capabilities, Enhanced monitoring with comprehensive traffic metrics and performance analytics, Improved operational efficiency through automated traffic management and policy enforcement
#
# ARCHITECTURE: Istio DestinationRule architecture with comprehensive traffic policy management and connection optimization, Multi-tier load balancing architecture with algorithm selection and performance optimization, Circuit breaker architecture with failure detection and recovery mechanisms, Security architecture with TLS configuration and encryption enforcement, Observability architecture with traffic monitoring and performance analytics
#
# TESTING: DestinationRule testing with traffic simulation and load balancing validation, Performance testing with connection pool optimization and throughput measurement, Resilience testing with circuit breaker validation and failure recovery, Security testing with TLS configuration and encryption verification, Load testing with high-volume traffic and scalability validation
#
# CONSTRAINTS:
# Quality: Zero traffic disruption during DestinationRule updates with rolling configuration changes, Complete load balancing accuracy with consistent traffic distribution and optimal performance, Reliable circuit breaker behavior with predictable failure detection and recovery, Comprehensive TLS security with proper encryption and certificate validation, Configuration consistency with standardized traffic policies across all services, Error handling with graceful degradation and automatic recovery mechanisms, Performance optimization with minimal overhead and maximum throughput
# Performance: Optimized load balancing with efficient traffic distribution algorithms and minimal latency, Connection pool efficiency with optimal resource utilization and connection reuse, Memory usage optimization with intelligent connection management and resource cleanup, CPU efficiency through optimized traffic processing and minimal overhead, Network performance optimization with connection pooling and traffic compression, Latency minimization through intelligent routing and proximity-based load balancing
# Security: Comprehensive TLS encryption with strong cipher suites and certificate validation, Mutual TLS configuration with client certificate authentication and validation, Security policy enforcement with access control and encryption at destination level, Certificate management with automatic provisioning and renewal, Audit logging with comprehensive traffic security event tracking and compliance reporting
#
# FRAMEWORKS: Istio 1.20+, Envoy Proxy, Kubernetes 1.28+, Prometheus, Grafana, Jaeger, cert-manager
#
# ORIGINALITY REQUIREMENTS:
# - Create COMPREHENSIVE DestinationRule configuration for [PROJECT_NAME] Istio traffic optimization and [DOMAIN_NAME] load balancing
# - Implement ADVANCED load balancing strategies tailored to [PROJECT_NAME] traffic patterns and [BUSINESS_PURPOSE] requirements
# - Design SOPHISTICATED connection pooling for [DOMAIN_NAME] performance optimization and resource efficiency
# - Generate THOROUGH circuit breaker configuration for [PROJECT_NAME] fault tolerance and automatic recovery
# - Create ROBUST TLS management for [BUSINESS_PURPOSE] secure communication and encryption enforcement
# - Implement COMPLETE subset management for [DOMAIN_NAME] version-based routing and deployment strategies
# - Design COMPREHENSIVE outlier detection for [PROJECT_NAME] unhealthy instance management and service reliability
# - Generate ADVANCED observability integration for [BUSINESS_PURPOSE] traffic monitoring and performance analysis
# - Create DETAILED documentation for [DOMAIN_NAME] DestinationRule configuration and operational procedures
# - Implement AUTOMATED validation for [PROJECT_NAME] traffic policy compliance and performance verification
#
# Generate comprehensive Istio DestinationRule solution that:
# - Creates COMPLETE DestinationRule YAML configurations with advanced load balancing and traffic optimization
# - Implements ADVANCED connection pooling with TCP and HTTP optimization for maximum performance
# - Develops SOPHISTICATED circuit breaker patterns with intelligent failure detection and recovery
# - Generates THOROUGH TLS configuration with mutual TLS and comprehensive security enforcement
# - Creates ROBUST subset definitions with version-based routing and canary deployment capabilities
# - Implements COMPREHENSIVE outlier detection with health monitoring and automatic instance management
# - Develops ADVANCED observability integration with traffic metrics and performance monitoring
# - Generates COMPLETE automation with traffic policy orchestration and configuration management
# - Creates DETAILED documentation explaining DestinationRule architecture and operational procedures
# - Implements AUTOMATED testing procedures ensuring traffic policy reliability and performance validation

/*
 * ENHANCED CRAFT METHOD FOR COMPREHENSIVE ISTIO DESTINATIONRULE CONFIGURATION
 * This enterprise-grade prompt generates COMPLETE, production-ready DestinationRule solution with:
 * 
 * COMPREHENSIVE DESTINATIONRULE ARCHITECTURE:
 * - Advanced load balancing configuration with multiple algorithms and optimization strategies
 * - Sophisticated connection pool management with TCP and HTTP optimization
 * - Complete circuit breaker implementation with failure detection and recovery
 * - Advanced TLS configuration with mutual TLS and certificate management
 * - Comprehensive subset definition with version-based routing and deployment support
 * - Sophisticated outlier detection with health monitoring and automatic recovery
 * - Advanced session affinity with consistent hash-based routing and sticky sessions
 * - Complete observability integration with metrics collection and performance monitoring
 * 
 * ADVANCED LOAD BALANCING STRATEGIES:
 * - Sophisticated algorithm selection with round-robin, least-connection, and random distribution
 * - Advanced consistent hash load balancing with session affinity and sticky routing
 * - Complex weighted routing with traffic splitting and canary deployment support
 * - Comprehensive locality-aware routing with zone and region-based traffic distribution
 * - Advanced health-based routing with healthy endpoint prioritization
 * - Sophisticated performance-based routing with latency and throughput optimization
 * - Complex failover strategies with automatic backup endpoint selection
 * - Advanced traffic shaping with rate limiting and traffic smoothing
 * 
 * SOPHISTICATED CONNECTION OPTIMIZATION:
 * - Advanced TCP connection pooling with connection limits and timeout management
 * - Complex HTTP connection optimization with keep-alive and connection reuse
 * - Sophisticated connection health checking with automatic connection validation
 * - Advanced timeout configuration with connection, request, and idle timeouts
 * - Comprehensive connection security with TLS configuration and encryption
 * - Complex connection monitoring with performance metrics and health tracking
 * - Advanced connection scaling with dynamic pool sizing and resource allocation
 * - Sophisticated connection cleanup with automatic resource management
 * 
 * PRODUCTION-READY DESTINATIONRULE IMPLEMENTATIONS:
 * - Thread-safe configuration management with proper resource isolation and updates
 * - Memory-efficient traffic handling with optimized resource allocation and cleanup
 * - Performance-optimized load balancing with efficient algorithms and minimal overhead
 * - Error-resilient traffic management with comprehensive fault tolerance
 * - Scalable traffic architecture with dynamic resource allocation and optimization
 * - Monitored traffic operations with comprehensive metrics and alerting
 * - Documented traffic policies with operational runbooks and best practices
 * - Maintainable traffic configuration with modular design and centralized management
 * 
 * PARAMETERIZED PLACEHOLDERS - Replace with your specific values:
 * - [PROJECT_NAME] → Your project name (ECommerceApp, PaymentService, UserManagement, etc.)
 * - [DOMAIN_NAME] → Your business domain (ecommerce, payments, user-management, etc.)
 * - [BUSINESS_PURPOSE] → Your business purpose (online shopping, payment processing, user authentication, etc.)
 * - [SERVICE_NAME] → Your service name (checkout-service, payment-gateway, user-service, etc.)
 * - [COMPANY_NAME] → Your company name (RetailCorp, PaymentInc, UserSystems, etc.)
 * - [NAMESPACE] → Your namespace (production, staging, development, etc.)
 * - [SERVICE_VERSION] → Your service version (v1, v2, stable, canary, etc.)
 * - [LOAD_BALANCER_ALGORITHM] → Your preferred algorithm (ROUND_ROBIN, LEAST_CONN, RANDOM, etc.)
 * 
 * ISTIO DESTINATIONRULE CUSTOMIZATIONS:
 * - Identify your specific traffic patterns and load characteristics for optimized load balancing configuration
 * - Define your performance requirements and SLA targets for connection pool optimization
 * - Specify your fault tolerance requirements and recovery strategies for circuit breaker configuration
 * - Configure your security requirements and encryption needs for comprehensive TLS setup
 * - Set up your deployment requirements and versioning strategies for subset management
 * - Define your health monitoring requirements and failure detection for outlier detection
 * - Specify your observability requirements and metrics collection for traffic monitoring
 * - Configure your automation requirements and policy management for operational efficiency
 * 
 * The more specific your service characteristics and [DOMAIN_NAME] traffic requirements, the more targeted and effective the DestinationRule configuration will be!
 */

## COMPREHENSIVE ISTIO DESTINATIONRULE FRAMEWORK

### Phase 1: Advanced DestinationRule Configuration
**Enterprise [DOMAIN_NAME] Traffic Management and Load Balancing Foundation**

#### Complete DestinationRule with Comprehensive Traffic Policies
```yaml
# Comprehensive Istio DestinationRule for [PROJECT_NAME] - [SERVICE_NAME]
# File: istio/destination-rules/[SERVICE_NAME]-destination-rule.yaml

apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: [SERVICE_NAME]-destination-rule
  namespace: [NAMESPACE]
  labels:
    app: [SERVICE_NAME]
    project: [PROJECT_NAME]
    domain: [DOMAIN_NAME]
    purpose: traffic-management
    managed-by: istio-platform-team
    policy-tier: enterprise
  annotations:
    description: "Enterprise DestinationRule for [SERVICE_NAME] with comprehensive traffic optimization"
    owner: "[COMPANY_NAME]-platform-team"
    load-balancing-algorithm: "[LOAD_BALANCER_ALGORITHM]"
    circuit-breaker-enabled: "true"
    tls-mode: "mutual"
    observability-enabled: "true"
    last
